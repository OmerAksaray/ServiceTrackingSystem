@page
@model ServiceTrackingSystem.Areas.Employee.Pages.EmployeePages.AddressManagerModel
@{
    ViewData["Title"] = "Address Management";
    Layout = "_EmployeeLayout";
}

<div class="container mt-4">
    <div class="card shadow">
        <div class="card-header bg-primary text-white d-flex justify-content-between align-items-center">
            <h4 class="mb-0"><i class="fas fa-map-marker-alt me-2"></i>Address Management</h4>
            <a asp-page="./Addresses" class="btn btn-light"><i class="fas fa-plus me-1"></i> Add New Address</a>
        </div>
        
        @if (!string.IsNullOrEmpty(Model.StatusMessage))
        {
            <div class="alert @(Model.StatusMessage.StartsWith("Error") ? "alert-danger" : "alert-success") alert-dismissible fade show mx-3 mt-3" role="alert">
                @Model.StatusMessage
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
        }
        
        <div class="card-body">
            @if (Model.EmployeeAddresses == null || !Model.EmployeeAddresses.Any())
            {
                <div class="alert alert-info">
                    <i class="fas fa-info-circle me-2"></i>You don't have any saved addresses yet. Use the "Add New Address" button to add an address.
                </div>
            }
            else
            {
                <form method="post" id="addressForm">
                    <div class="table-responsive">
                        <table class="table table-hover address-table">
                            <thead class="table-light">
                                <tr>
                                    <th scope="col" width="10%">Active</th>
                                    <th scope="col" width="25%">Address Details</th>
                                    <th scope="col" width="20%">City/District</th>
                                    <th scope="col" width="20%">Neighborhood/Street</th>
                                    <th scope="col" width="15%">Date Added</th>
                                    <th scope="col" width="10%" class="text-center">
                                        Actions
                                    </th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var address in Model.EmployeeAddresses.OrderByDescending(a => a.IsActive).ThenByDescending(a => a.CreatedDate))
                                {
                                    <tr class="@(address.IsActive ? "table-active" : "")">
                                        <td>
                                            <div class="form-check form-switch d-flex justify-content-center">
                                                <input type="checkbox" class="form-check-input custom-switch" 
                                                       name="employeeAddressId" 
                                                       value="@address.Id" 
                                                       @(address.IsActive ? "checked" : "") 
                                                       onclick="handleCheckboxClick(this)" />
                                            </div>
                                        </td>
                                        <td>
                                            @if (address.Location != null)
                                            {
                                                <div>@(address.Location.DetailedAddress ?? "Not specified")</div>
                                               
                                            }
                                        </td>
                                        <td>
                                            @if (address.Location != null)
                                            {
                                                <strong>@address.Location.CityName</strong>
                                                @if (!string.IsNullOrEmpty(address.Location.DistrictName))
                                                {
                                                    <div class="text-muted">@address.Location.DistrictName</div>
                                                }
                                            }
                                        </td>
                                        <td>
                                            @if (address.Location != null)
                                            {
                                                @if (!string.IsNullOrEmpty(address.Location.NeighborhoodName))
                                                {
                                                    <div>@address.Location.NeighborhoodName</div>
                                                }
                                                @if (!string.IsNullOrEmpty(address.Location.StreetName))
                                                {
                                                    <div class="text-muted">@address.Location.StreetName</div>
                                                }
                                            }
                                        </td>
                                        <td>@address.CreatedDate.ToString("dd.MM.yyyy")</td>
                                        <td class="text-center">
                                            <div class="btn-group">
                                                <a href="/employee/addresses?addressId=@address.Id" class="btn btn-sm btn-outline-primary">
                                                    <i class="fas fa-edit"></i>
                                                </a>
                                                <button type="button" class="btn btn-sm btn-outline-danger" onclick="confirmDelete(@address.Id)">
                                                    <i class="fas fa-trash"></i>
                                                </button>
                                            </div>
                                        </td>

                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                    
                    <div class="d-flex justify-content-end mt-3">
                        <button type="submit" class="btn btn-primary" asp-page-handler="UpdateActiveAddress">
                            <i class="fas fa-save me-1"></i> Save Changes
                        </button>
                    </div>
                </form>
            }
        </div>
    </div>
</div>

<!-- Delete Confirmation Modal -->
<div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header bg-danger text-white">
                <h5 class="modal-title" id="deleteModalLabel">Confirm Delete</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p>Are you sure you want to delete this address? This action cannot be undone.</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <form method="post" id="deleteForm" asp-page-handler="Delete">
                    <input type="hidden" id="addressIdToDelete" name="addressId" value="" />
                    <button type="submit" class="btn btn-danger">Yes, Delete</button>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function confirmDelete(addressId) {
            document.getElementById('addressIdToDelete').value = addressId;
            var deleteModal = new bootstrap.Modal(document.getElementById('deleteModal'));
            deleteModal.show();
        }
        
        function handleCheckboxClick(checkbox) {
            // Ensure only one checkbox can be checked at a time (like radio buttons)
            var checkboxes = document.querySelectorAll('input[type="checkbox"][name="employeeAddressId"]');
            checkboxes.forEach(function(cb) {
                if (cb !== checkbox) {
                    cb.checked = false;
                }
            });
        }
        
        // Custom styles for the address management panel
        document.addEventListener('DOMContentLoaded', function() {
            // Add custom styles
            const style = document.createElement('style');
            style.textContent = `
                .custom-switch {
                    width: 2em;
                    height: 1em;
                    cursor: pointer;
                    border-color: #007bff;
                }
                
                .custom-switch:checked {
                    background-color: #007bff;
                    border-color: #007bff;
                }
                
                .address-table td {
                    vertical-align: middle;
                }
                
                .table-active {
                    background-color: rgba(0, 123, 255, 0.1) !important;
                }
            `;
            document.head.appendChild(style);
        });
    </script>
}
