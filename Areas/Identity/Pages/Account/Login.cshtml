@page
@model LoginModel

@{
    ViewData["Title"] = "Log in";
}

<div class="login-container fade-in">
    <div class="row justify-content-center">
        <div class="col-md-8 col-lg-6">
            <div class="login-card">
                <div class="text-center mb-4">
                    <h1 class="text-gradient">@ViewData["Title"]</h1>
                    <p class="text-muted">Welcome back! Please enter your credentials to access your account.</p>
                </div>
                
                <form id="account" method="post" class="needs-validation" novalidate>
                    <div asp-validation-summary="ModelOnly" class="validation-message rounded-custom p-3 mb-4 bg-danger bg-opacity-10"></div>
                    
                    <div class="form-floating mb-4">
                        <input asp-for="Input.Email" class="form-control" autocomplete="username" aria-required="true" placeholder="name@example.com" required />
                        <label asp-for="Input.Email">Email</label>
                        <span asp-validation-for="Input.Email" class="validation-message"></span>
                        <div class="invalid-feedback">Please enter your email address.</div>
                    </div>
                    
                    <div class="form-floating mb-4">
                        <input asp-for="Input.Password" class="form-control" autocomplete="current-password" aria-required="true" placeholder="password" required />
                        <label asp-for="Input.Password">Password</label>
                        <span asp-validation-for="Input.Password" class="validation-message"></span>
                        <div class="invalid-feedback">Please enter your password.</div>
                    </div>
                    
                    <div class="d-flex justify-content-between align-items-center mb-4">
                        <div class="form-check">
                            <input class="form-check-input" asp-for="Input.RememberMe" />
                            <label class="form-check-label" asp-for="Input.RememberMe">Remember me</label>
                        </div>
                        <a id="forgot-password" asp-page="./ForgotPassword" class="forgot-password-link">Forgot password?</a>
                    </div>
                    
                    <div class="d-grid gap-2 mb-4">
                        <button id="login-submit" type="submit" class="btn btn-primary btn-lg">Log in</button>
                    </div>
                    
                    <div class="text-center mt-4">
                        <p class="mb-2">Don't have an account? <a asp-page="./Register" asp-route-returnUrl="@Model.ReturnUrl" class="text-primary">Register now</a></p>
                        <p class="text-muted small">Need to verify your email? <a id="resend-confirmation" asp-page="./ResendEmailConfirmation" class="text-primary">Resend confirmation</a></p>
                    </div>
                </form>
                
                @if ((Model.ExternalLogins?.Count ?? 0) > 0)
                {
                    <div class="external-auth-section">
                        <div class="divider"><span>OR</span></div>
                        
                        <form id="external-account" asp-page="./ExternalLogin" asp-route-returnUrl="@Model.ReturnUrl" method="post">
                            <div class="d-grid gap-2 mt-4">
                                @foreach (var provider in Model.ExternalLogins!)
                                {
                                    <button type="submit" class="btn btn-outline-secondary" name="provider" value="@provider.Name">
                                        <i class="bi bi-@(provider.Name.ToLower()) me-2"></i> Continue with @provider.DisplayName
                                    </button>
                                }
                            </div>
                        </form>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        // Custom form validation enhancement
        (function () {
            'use strict'
            
            // Fetch all forms that need validation
            const forms = document.querySelectorAll('.needs-validation')
            
            // Loop over them and prevent submission
            Array.from(forms).forEach(form => {
                form.addEventListener('submit', event => {
                    if (!form.checkValidity()) {
                        event.preventDefault()
                        event.stopPropagation()
                    }
                    
                    form.classList.add('was-validated')
                }, false)
                
                // Add visual feedback as user types
                const inputs = form.querySelectorAll('input')
                inputs.forEach(input => {
                    input.addEventListener('blur', () => {
                        if (input.value.trim() !== '') {
                            input.classList.add('is-touched')
                        } else {
                            input.classList.remove('is-touched')
                        }
                    })
                })
            })
        })()
    </script>
}
