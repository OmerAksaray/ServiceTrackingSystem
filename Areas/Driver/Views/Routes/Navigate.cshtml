@model ServiceTrackingSystem.Models.Location

@{
    ViewBag.Title = "Navigasyonu Başlat";
    Layout = "~/Areas/Driver/Pages/Shared/_DriverLayout.cshtml";
}

<div class="container-fluid p-4">
    <div class="card shadow mb-4">
        <div class="card-header py-3 d-flex justify-content-between align-items-center">
            <h6 class="m-0 font-weight-bold text-primary">
                Navigasyon: @Model.NeighborhoodName, @Model.DistrictName
            </h6>
            <button id="startNavigationBtn" class="btn btn-success">
                <i class="fas fa-route"></i> Navigasyonu Başlat
            </button>
        </div>
        <div class="card-body">
            <div class="row">
                <div class="col-md-9">
                    <div id="map" style="height: 600px; width: 100%;"></div>
                </div>
                <div class="col-md-3">
                    <div class="mb-3">
                        <strong>Adres:</strong>
                        <p>
                            @if (!string.IsNullOrEmpty(Model.DetailedAddress))
                            {
                                @Model.DetailedAddress
                            }
                            else
                            {
                                <span>@Model.StreetName, @Model.NeighborhoodName</span><br />
                                <span>@Model.DistrictName, @Model.CityName</span>
                            }
                        </p>
                    </div>
                    <div id="directionsPanel" style="height: 500px; overflow-y: auto;"></div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://maps.googleapis.com/maps/api/js?key=@ViewBag.GoogleMapsApiKey&callback=initMap" async defer></script>
    <script>
        let map;
        let directionsService;
        let directionsRenderer;
        let userPosition = null;
        
        // Destination from the controller
        const destination = {
            lat: @ViewBag.Destination.lat,
            lng: @ViewBag.Destination.lng,
            address: "@ViewBag.Destination.address"
        };

        function initMap() {
            directionsService = new google.maps.DirectionsService();
            directionsRenderer = new google.maps.DirectionsRenderer();
            
            // Initialize with destination
            map = new google.maps.Map(document.getElementById("map"), {
                zoom: 12,
                center: { lat: destination.lat, lng: destination.lng }
            });
            
            directionsRenderer.setMap(map);
            directionsRenderer.setPanel(document.getElementById("directionsPanel"));

            // Add marker for destination
            new google.maps.Marker({
                position: { lat: destination.lat, lng: destination.lng },
                map: map,
                title: destination.address,
                icon: {
                    url: "http://maps.google.com/mapfiles/ms/icons/red-dot.png"
                }
            });

            // Try to get user's current position
            if (navigator.geolocation) {
                navigator.geolocation.getCurrentPosition(
                    (position) => {
                        userPosition = {
                            lat: position.coords.latitude,
                            lng: position.coords.longitude
                        };
                        
                        // Add marker for user's position
                        new google.maps.Marker({
                            position: userPosition,
                            map: map,
                            title: "Konumunuz",
                            icon: {
                                url: "http://maps.google.com/mapfiles/ms/icons/blue-dot.png"
                            }
                        });
                        
                        // Calculate and display route
                        calculateRoute();
                    },
                    (error) => {
                        console.error("Geolocation error:", error);
                        alert("Konumunuza erişilemiyor. Lütfen konum erişimine izin verin.");
                    }
                );
            } else {
                alert("Tarayıcınız konum hizmetlerini desteklemiyor.");
            }
            
            // Set up button click handler
            document.getElementById("startNavigationBtn").addEventListener("click", openGoogleMapsNavigation);
        }

        function calculateRoute() {
            if (!userPosition) {
                alert("Konumunuza erişilemiyor. Lütfen konum erişimine izin verin.");
                return;
            }

            directionsService.route(
                {
                    origin: userPosition,
                    destination: { lat: destination.lat, lng: destination.lng },
                    travelMode: google.maps.TravelMode.DRIVING,
                    provideRouteAlternatives: true
                },
                (response, status) => {
                    if (status === "OK") {
                        directionsRenderer.setDirections(response);
                    } else {
                        console.error("Directions request failed due to " + status);
                        alert("Rota hesaplanamadı: " + status);
                    }
                }
            );
        }
        
        function openGoogleMapsNavigation() {
            if (!userPosition) {
                alert("Konumunuza erişilemiyor. Lütfen konum erişimine izin verin.");
                return;
            }
            
            // Open Google Maps app with navigation
            const url = `https://www.google.com/maps/dir/?api=1&origin=${userPosition.lat},${userPosition.lng}&destination=${destination.lat},${destination.lng}&travelmode=driving`;
            window.open(url, '_blank');
        }
    </script>
} 